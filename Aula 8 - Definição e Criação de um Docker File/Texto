- Primeiro Docker File

# docker run -dti --name ubuntu-python ubuntu
# docker exec -ti ubuntu-python bash


# apt install python3 nano
2# apt clean


	nome = input("Qual é o seu nome? ")
	print (nome)



nano dockerfile

FROM ubuntu

RUN apt update && apt install -y python3 && apt clean

COPY app.py /opt/app.py

CMD python3 /opt/app.py

# docker build . -t python-ubuntu
dc


- Criando uma imagem personalizada do Apacher


wget http://site1368633667.hospedagemdesites.ws/site1.zip

Dockerfile
==================

FROM debian

RUN apt-get update && apt-get install -y apache2 && apt-get clean

ADD site.tar /var/www/html

LABEL description="Apache Webserver 1.0"

VOLUME /var/www/html/

EXPOSE 80


ENTRYPOINT ["/usr/sbin/apachectl"]

CMD ["-D", "FOREGROUND"]


======================

# docker image build -t debian-apache:1.0 .

# docker run  -dti -p 80:80 --name meu-apache debian-apache:1.0



- Criando imagens personalizadas a partir de imagens de linguagens de programação


wget http://site1368633667.hospedagemdesites.ws/site1.zip

Dockerfile
==================

FROM debian

RUN apt-get update && apt-get install -y apache2 && apt-get clean

ADD site.tar /var/www/html

LABEL description="Apache Webserver 1.0"

VOLUME /var/www/html/

EXPOSE 80


ENTRYPOINT ["/usr/sbin/apachectl"]

CMD ["-D", "FOREGROUND"]


======================

# docker image build -t debian-apache:1.0 .

# docker run  -dti -p 80:80 --name meu-apache debian-apache:1.0


- Criando uma imagem Multistage


wget http://site1368633667.hospedagemdesites.ws/site1.zip

Dockerfile
==================

FROM debian

RUN apt-get update && apt-get install -y apache2 && apt-get clean

ADD site.tar /var/www/html

LABEL description="Apache Webserver 1.0"

VOLUME /var/www/html/

EXPOSE 80


ENTRYPOINT ["/usr/sbin/apachectl"]

CMD ["-D", "FOREGROUND"]


======================

# docker image build -t debian-apache:1.0 .

# docker run  -dti -p 80:80 --name meu-apache debian-apache:1.0


- Realizando o upload de imagens para o Hub do Docker

docker login

docker build . -t nome-de-usuário/my-go=app:1.0

docker push nome-deu-usuário/my-go=app:1.0


- Registry Criando um servidor de imagens

docker login

docker build . -t nome-de-usuário/my-go=app:1.0

docker push nome-deu-usuário/my-go=app:1.0

