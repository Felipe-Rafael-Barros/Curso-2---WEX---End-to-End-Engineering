Modelo Cliente-Servidor

    - O modelo cliente-servidor é uma estrutura de aplicação que distribui as tarefas e cargas de trabalho entre os fornecedores de uma recurso ou serviço, designados como servidores, e os requerentes dos serviços, designados como clientes.

Cloud
    - A cloud computing é o acesso sob demanda, via internet, a recursos de computação. Aplicativos, servidores(físicos e virtuais), armazenamento de dados, ferramentas de desenvolvimento, recursos de rede e muito mais, hospedados em um data center remoto gerenciado por um provedor de serviços em cloud (Cloud Solution Provider). O CSP disponibiliza esses recursos por uma assinatura mensal ou por um valor cobrado conforme o uso.

Virtualização
    - Utiliza software para criar uma camada de abstração sobre o hardware do computador, permitindo que os recursos de hardware de um único computador(processadores, memória, armazenamento, etc) sejam divididos em vários computadores virtuais.

Microserviços
    São uma abordagem arquitetônica e organizacional do desenvolvimento de software na qual o software consiste em pequenos serviços independentes que se comunicam usando APIs bem definidas. Esses serviços pertencem a pequenas equispes autossuficientes.

    As arquiteturas de microsserviços facilitam a escalabilidade e agilizam o desenvolvimento de aplicativos, habilitando a inivação e acelerando o tempo de introdução de novos recursos no mercado.

O que é um container?
    - Os contêineres são uma tecnologia usada para reunir um aplicativo e todos os seus arquivos necessários em um ambiente de tempo de execução. Como uma unidade, o contêiner pode ser facilmente movido e executado em qualquer sistema operacional, em qualquer contexto.

O que é Docker?
    - Com o Docker, é possível lidar com os containers como se fossem máquinas virtuais modulares e extremamente leves. Além disso, os containers oferecem maior flexibilidade para você criar, implantar, copiar e migrar um container de um ambiente para outro. Isso otimiza as aplicações em nuvem (privada e pública)

Qual é a diferença entre virtualização e os containers?
    - As duas tecnologia são distintas porém complementares. Veja uma maneira fácil de distiguir ambas:
        - Com virtualização, é possível executar sistemas operacionais(Windows ou Linux) simultaneamente em um único sistema de hardware
        - Os containers compartilham o mesmo kernel do sistema operacional e isolam os processos da aplicação do restante do sistema. Os containers Linux são extremamente portáteis, mas devem ser compatíveis com o sistema subjacente.

Comandos básicos de Docker:

- Executando um contêiner

docker pull ubuntu
docker run ubuntu
docker run ubuntu sleep 10
docker run ubuntu sleep 1500
docker stop [id]
docker run --help
docker run -it ubuntu


- Executando aplicações no contêiner

docker run -dti  ubuntu 
docker exec -it [id ou nome]  /bin/bash

- Excluindo e nomeando contêineres

docker stop [id]
docker rm [id]
docker rmi [imagem]

docker run -dti --name Ubuntu-A ubuntu

- Copiando arquivos para o contêiner

docker exec -ti Ubuntu-A /bin/bash
docker exec Ubuntu-A mkdir /destino/
docker exec Ubuntu-A mkdir ls -l /
nano Arquivo.txt
docker cp arquivo.txt Ubuntu-A:/aula/

- Copiando arquivos do container

docker cp Ubuntu-A:/destino/Meuzip.zip  Zipcopia.zip

- Criando um contêiner do MySQL

docker cp Ubuntu-A:/destino/Meuzip.zip  Zipcopia.zip

- Acessando um container externamente

# docker pull mysql
 
# docker run -e MYSQL_ROOT_PASSWORD=Senha123 --name mysql-A -d -p 3306:3306 mysql

# docker exec -it mysql-A bash

# mysql -u root -p --protocol=tcp


CREATE DATABASE aula;
show databases;

# docker inspect mysql-A

# mysql -u root -p --protocol=tcp